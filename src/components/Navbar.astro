---
// src/components/Navbar.astro
---
---

<nav id="main-nav" class="w-full px-4 md:px-20 py-4 fixed top-0 left-0 z-50 backdrop-blur-md bg-black/30 border-b border-white/10 shadow-md transition-all duration-300">
  <div class="flex justify-between items-center">
    <a href="/#hero" class="text-2x1 font-bold text-white tracking-wide flex items-center gap-3">
      <img src="/assets/logos/logo.png" alt="AlphaBioma Logo" class="h-12 md:h-20 w-auto" />
      <div class="flex flex-col leading-tight">
        <span class="text-xl font-bold text-white">AlphaBioma</span>
        <span class="text-xs tracking-wide text-blue-200">Dados que guiam, ciência que entrega</span>
      </div>
    </a>
    
    <!-- Menu para desktop -->
    <div class="hidden md:flex gap-8">
      <div class="flex gap-6 text-white items-center">
        <div class="relative dropdown-container">
          <button class="dropdown-button flex items-center gap-1 text-sm font-medium hover:text-blue-300 transition-colors relative">
            Serviços
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 transform transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div class="dropdown-menu absolute left-0 mt-2 bg-black/80 backdrop-blur-md border border-blue-500/30 rounded-lg shadow-xl opacity-0 invisible transform -translate-y-2 transition-all duration-300 w-56">
            <a href="/microbioma" class="block px-6 py-3 text-sm text-white hover:bg-blue-900/40 first:rounded-t-lg transition-colors">
              <div class="font-large">Microbioma</div>
            </a>
            <a href="/dados" class="block px-6 py-3 text-sm text-white hover:bg-blue-900/40 last:rounded-b-lg transition-colors">
              <div class="font-medium">Análise de Dados</div>
            </a>
          </div>
        </div>
        <a href="/#about" class="text-sm font-medium hover:text-blue-300 transition-colors relative after:absolute after:bottom-[-4px] after:left-0 after:h-[2px] after:w-0 after:bg-blue-400 after:transition-all hover:after:w-full">Sobre Nós</a>
        <a href="/#insights" class="text-sm font-medium hover:text-blue-300 transition-colors relative after:absolute after:bottom-[-4px] after:left-0 after:h-[2px] after:w-0 after:bg-blue-400 after:transition-all hover:after:w-full">Insights</a>
        <a href="/aplicativos" class="text-sm font-medium hover:text-blue-300 transition-colors relative after:absolute after:bottom-[-4px] after:left-0 after:h-[2px] after:w-0 after:bg-blue-400 after:transition-all hover:after:w-full">Aplicativo</a>
      </div>
      
      <a 
        href="/#Contact" 
        class="px-4 py-2 bg-gradient-to-r from-blue-700 to-blue-500 text-white text-sm font-medium rounded-lg hover:shadow-lg hover:shadow-blue-600/20 transform hover:-translate-y-1 transition-all duration-300"
      >
        Fale Conosco
      </a>
      
      <a 
        href="/admin/login" 
        class="px-4 py-2 border border-blue-500/30 backdrop-blur-md bg-blue-600/20 text-white text-sm font-medium rounded-lg hover:bg-blue-500/30 transform hover:-translate-y-1 transition-all duration-300"
      >
        Portal do Cliente
      </a>
    </div>
    
    <!-- Botão de menu móvel -->
    <button id="mobileMenuButton" class="md:hidden text-white">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>
  </div>
  
  <!-- Menu móvel (oculto por padrão) -->
  <div id="mobileMenu" class="md:hidden hidden bg-black/90 backdrop-blur-md mt-4 rounded-lg p-4 animate-fade-in border border-blue-500/20 shadow-lg">
    <div class="flex flex-col gap-4">
      <div class="mobile-dropdown">
        <button class="mobile-dropdown-button flex items-center justify-between w-full text-white py-2 border-b border-blue-800/50">
          Serviços
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 transform transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="mobile-dropdown-content hidden pl-4 border-l border-blue-800/50 ml-2 mt-2">
          <a href="/microbioma" class="text-white hover:text-blue-300 py-2 flex flex-col">
            <span>Microbioma</span>
          </a>
          <a href="/dados" class="text-white hover:text-blue-300 py-2 flex flex-col">
            <span>Análise de Dados</span>
          </a>
        </div>
      </div>   
      <a href="/#about" class="text-white hover:text-blue-300 py-2 border-b border-blue-800/50">Sobre Nós</a>
      <a href="/#insights" class="text-white hover:text-blue-300 py-2 border-b border-blue-800/50">Insights</a>
      <a href="/app" class="text-white hover:text-blue-300 py-2 border-b border-blue-800/50">AlphaBioma App</a> 
      <a href="/admin/login" class="text-white hover:text-blue-300 py-2 border-b border-blue-800/50">Portal do Cliente</a>
      <a href="/#contact" class="text-white hover:text-blue-300 py-2 px-4 bg-gradient-to-r from-blue-700 to-blue-500 rounded-lg text-center mt-2">Fale Conosco</a>
    </div>
  </div>
</nav>

<script>
// JavaScript para controlar o menu móvel e efeitos de scroll
document.addEventListener('DOMContentLoaded', () => {
  const mobileMenuButton = document.getElementById('mobileMenuButton');
  const mobileMenu = document.getElementById('mobileMenu');
  const navbar = document.getElementById('main-nav');
  
  // Controle do menu móvel
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
    
    // Fechar o menu quando clicar em um link
    const mobileLinks = mobileMenu.querySelectorAll('a');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
      });
    });
  }
  
  // Dropdown no mobile
  const mobileDropdownButtons = document.querySelectorAll('.mobile-dropdown-button');
  mobileDropdownButtons.forEach(button => {
    button.addEventListener('click', () => {
      const content = button.nextElementSibling;
      content.classList.toggle('hidden');
      button.querySelector('svg').classList.toggle('rotate-180');
    });
  });
  
  // Adicionar classe ao scroll
  window.addEventListener('scroll', () => {
    if (window.scrollY > 100) {
      navbar.classList.add('bg-black/60', 'py-3');
      navbar.classList.remove('bg-black/30', 'py-4');
    } else {
      navbar.classList.add('bg-black/30', 'py-4');
      navbar.classList.remove('bg-black/60', 'py-3');
    }
  });
  
  // Gestão dos dropdowns desktop com delay
  const dropdownContainers = document.querySelectorAll('.dropdown-container');
  
  dropdownContainers.forEach(container => {
    let timeout;
    const menu = container.querySelector('.dropdown-menu');
    const button = container.querySelector('.dropdown-button');
    
    // Exibir o menu
    container.addEventListener('mouseenter', () => {
      clearTimeout(timeout);
      
      // Rotacionar a seta
      container.querySelector('svg').classList.add('rotate-180');
      
      // Exibir menu com animação
      menu.classList.remove('opacity-0', 'invisible', '-translate-y-2');
      menu.classList.add('opacity-100', 'visible', 'translate-y-0');
    });
    
    // Ocultar o menu com delay
    container.addEventListener('mouseleave', () => {
      // Rotacionar a seta de volta
      container.querySelector('svg').classList.remove('rotate-180');
      
      // Atraso para fechar o menu (500ms = 0.5 segundos)
      timeout = setTimeout(() => {
        menu.classList.remove('opacity-100', 'visible', 'translate-y-0');
        menu.classList.add('opacity-0', 'invisible', '-translate-y-2');
      }, 500);
    });
  });
});
</script>

<style>
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.animate-fade-in {
  animation: fade-in 0.3s ease-out forwards;
}
</style>